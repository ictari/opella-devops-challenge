name: "Terraform Deploy"

on:
  #push:
  #  branches: [master]
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment"
        required: true
        default: "dev"
      apply:
        description: "Apply the changes?"
        required: true
        default: "false"
      clean:
        description: "Destroy infrastructure first?"
        required: false
        default: "false"
       
env:
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  SSH_PUB_KEY: ${{ secrets.SSH_PUB_KEY }}

jobs:
  terraform:
    name: "Terraform Plan + Apply"
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    defaults:
      run:
        working-directory: infra

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Terraform Init
        run: terraform init -backend-config=configs/backend_${{ github.event.inputs.environment }}.tfvars

      - name: Terraform Destroy (clean)
        if: github.event.inputs.clean == 'true'
        run: terraform destroy -auto-approve -var-file=configs/${{ github.event.inputs.environment }}.tfvars -var 'ssh_pub_key=$SSH_PUB_KEY'
      
      - name: Terraform Plan
        run: terraform plan -var-file=configs/${{ github.event.inputs.environment }}.tfvars -var 'ssh_pub_key=$SSH_PUB_KEY'

      - name: Terraform Apply
        if: github.ref == 'refs/heads/master' && github.event.inputs.apply == 'true'
        run: terraform apply -auto-approve -var-file=configs/${{ github.event.inputs.environment }}.tfvars -var 'ssh_pub_key=$SSH_PUB_KEY'